
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

rtmp {
    out_queue           4096;
    out_cork            8;
    max_streams         128;
    timeout             15s;
    drop_idle_publisher 15s;
	chunk_size 4096;
    log_interval 5s; #log ģ���� access.log �м�¼��־�ļ��ʱ�䣬�Ե��Էǳ�����
    log_size     1m; #log ģ��������¼��־�Ļ�������С
    server {
        listen 1936;
        application live {
            live on;#ֱ��ģʽ
            gop_cache on;
            #on_publish http://127.0.0.1:8082/auth/check;
            #on_play http://127.0.0.1:8082/auth/check;
		      #  hls on; #���������ֱ�������������ʵʱ�طŷ�������
 
        		#wait_key on; #����Ƶ��Ƭ���б����������Ͳ�������������ˡ�
         
        		#hls_path /usr/local/data/hls; #��Ƭ��Ƶ�ļ����λ�á�
         
        		#hls_fragment 1s;     #ÿ����Ƶ��Ƭ��ʱ����
         
        		#hls_playlist_length 3s;  #�ܹ����Իؿ����¼����������õ���1���ӡ�
         
        		#hls_continuous on; #����ģʽ��
         
        		#hls_cleanup on;    #�Զ������Ƭ����ɾ����
         
        		#hls_nested on;     #Ƕ��ģʽ��
        		
               #hls_fragment_naming system;

            #recorder all {
                #record all;         #����¼��������Ϣ��������Ƶ����������������ѡ��ο��ĵ���
                #record_path /usr/local/data/flv; #flv¼���ļ���ŵ�ַ��ע���Ŀ¼��������Ҫ��nginx������777Ȩ��
                #record_max_size 300M;   #�����ļ��Ĵ�С��ÿ���ļ�����300m�󣬽������Ĳ����´���һ���ļ���������
                #record_unique on; 
            #}
            
        }
        #application recorder {
            #live on;
            #on_publish http://127.0.0.1:8082/auth/check;
            #on_play http://127.0.0.1:8082/auth/check;
        #}
       
    }
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8011;
        server_name  localhost;
			
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location /control {
            rtmp_control all;
        }
        location /stat {
  		      rtmp_stat all;
        		rtmp_stat_stylesheet stat.xsl;
   	    }
         
   	    location /stat.xsl {
        		root /usr/local/nginx/nginx-rtmp-module/;
   	    }
            
        location /hls {
           types {  
        		    application/vnd.apple.mpegurl m3u8;  
        		    video/mp2t ts;  
        		}
        		alias /usr/local/data/hls;   
        		expires -1;
        		add_header Cache-Control no-cache always;
        		add_header Access-Control-Allow-Origin * always;
               #add_header Access-Control-Allow-Credentials true always; 
               
               
        }
         
   	    location /live {  #����Ҳ����Ҫ��ӵ��ֶΡ�
            flv_live on;
		add_header Access-Control-Allow-Origin *;
		#add_header Access-Control-Allow-Credentials true; 
   	    }  
            
        location /record{
  	        alias /usr/local/data/flv/;
          	autoindex on;
          	expires -1;
          	add_header Cache-Control no-cache;
          	add_header 'Access-Control-Allow-Origin' '*';
          	add_header 'Access-Control-Allow-Credentials' 'true';
          	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
           	add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      	}
       
       location /auth {
    	    internal;
    	    proxy_set_header Host $host;
    	    proxy_pass_request_body off;
    	    proxy_set_header Content-Length "";
    	    proxy_pass http://127.0.0.1:8082/auth/check;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
